/* tslint:disable */
/* eslint-disable */
/**
 * Sentio API
 * Sentio Open API for query data
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  AnalyticServiceAnalyticServiceSaveAndRunSQLBody,
  AnalyticServiceSaveAndRunSQLRequest,
  AnalyticServiceSaveAndRunSQLResponse,
} from '../models/index';
import {
    AnalyticServiceAnalyticServiceSaveAndRunSQLBodyFromJSON,
    AnalyticServiceAnalyticServiceSaveAndRunSQLBodyToJSON,
    AnalyticServiceSaveAndRunSQLRequestFromJSON,
    AnalyticServiceSaveAndRunSQLRequestToJSON,
    AnalyticServiceSaveAndRunSQLResponseFromJSON,
    AnalyticServiceSaveAndRunSQLResponseToJSON,
} from '../models/index';

export interface SaveAndRunSQLRequest {
    owner: string;
    slug: string;
    body: AnalyticServiceAnalyticServiceSaveAndRunSQLBody;
}

export interface SaveAndRunSQL2Request {
    body: AnalyticServiceSaveAndRunSQLRequest;
}

/**
 * 
 */
export class DefaultApi extends runtime.BaseAPI {

    /**
     */
    async saveAndRunSQLRaw(requestParameters: SaveAndRunSQLRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AnalyticServiceSaveAndRunSQLResponse>> {
        if (requestParameters['owner'] == null) {
            throw new runtime.RequiredError(
                'owner',
                'Required parameter "owner" was null or undefined when calling saveAndRunSQL().'
            );
        }

        if (requestParameters['slug'] == null) {
            throw new runtime.RequiredError(
                'slug',
                'Required parameter "slug" was null or undefined when calling saveAndRunSQL().'
            );
        }

        if (requestParameters['body'] == null) {
            throw new runtime.RequiredError(
                'body',
                'Required parameter "body" was null or undefined when calling saveAndRunSQL().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Api-Key"] = await this.configuration.apiKey("Api-Key"); // ApiKeyAuth authentication
        }

        const response = await this.request({
            path: `/api/v1/analytics/{owner}/{slug}/sql/save_and_run_query`.replace(`{${"owner"}}`, encodeURIComponent(String(requestParameters['owner']))).replace(`{${"slug"}}`, encodeURIComponent(String(requestParameters['slug']))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: AnalyticServiceAnalyticServiceSaveAndRunSQLBodyToJSON(requestParameters['body']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AnalyticServiceSaveAndRunSQLResponseFromJSON(jsonValue));
    }

    /**
     */
    async saveAndRunSQL(requestParameters: SaveAndRunSQLRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AnalyticServiceSaveAndRunSQLResponse> {
        const response = await this.saveAndRunSQLRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async saveAndRunSQL2Raw(requestParameters: SaveAndRunSQL2Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AnalyticServiceSaveAndRunSQLResponse>> {
        if (requestParameters['body'] == null) {
            throw new runtime.RequiredError(
                'body',
                'Required parameter "body" was null or undefined when calling saveAndRunSQL2().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Api-Key"] = await this.configuration.apiKey("Api-Key"); // ApiKeyAuth authentication
        }

        const response = await this.request({
            path: `/api/v1/analytics/sql/save_and_run_query`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: AnalyticServiceSaveAndRunSQLRequestToJSON(requestParameters['body']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AnalyticServiceSaveAndRunSQLResponseFromJSON(jsonValue));
    }

    /**
     */
    async saveAndRunSQL2(requestParameters: SaveAndRunSQL2Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AnalyticServiceSaveAndRunSQLResponse> {
        const response = await this.saveAndRunSQL2Raw(requestParameters, initOverrides);
        return await response.value();
    }

}
