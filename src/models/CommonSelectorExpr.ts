/* tslint:disable */
/* eslint-disable */
/**
 * Sentio API
 * Sentio Open API for query data
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CommonSelector } from './CommonSelector';
import {
    CommonSelectorFromJSON,
    CommonSelectorFromJSONTyped,
    CommonSelectorToJSON,
} from './CommonSelector';
import type { CommonSelectorExprLogicExpr } from './CommonSelectorExprLogicExpr';
import {
    CommonSelectorExprLogicExprFromJSON,
    CommonSelectorExprLogicExprFromJSONTyped,
    CommonSelectorExprLogicExprToJSON,
} from './CommonSelectorExprLogicExpr';

/**
 * 
 * @export
 * @interface CommonSelectorExpr
 */
export interface CommonSelectorExpr {
    /**
     * 
     * @type {CommonSelector}
     * @memberof CommonSelectorExpr
     */
    selector?: CommonSelector;
    /**
     * 
     * @type {CommonSelectorExprLogicExpr}
     * @memberof CommonSelectorExpr
     */
    logicExpr?: CommonSelectorExprLogicExpr;
}

/**
 * Check if a given object implements the CommonSelectorExpr interface.
 */
export function instanceOfCommonSelectorExpr(value: object): boolean {
    return true;
}

export function CommonSelectorExprFromJSON(json: any): CommonSelectorExpr {
    return CommonSelectorExprFromJSONTyped(json, false);
}

export function CommonSelectorExprFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommonSelectorExpr {
    if (json == null) {
        return json;
    }
    return {
        
        'selector': json['selector'] == null ? undefined : CommonSelectorFromJSON(json['selector']),
        'logicExpr': json['logicExpr'] == null ? undefined : CommonSelectorExprLogicExprFromJSON(json['logicExpr']),
    };
}

export function CommonSelectorExprToJSON(value?: CommonSelectorExpr | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'selector': CommonSelectorToJSON(value['selector']),
        'logicExpr': CommonSelectorExprLogicExprToJSON(value['logicExpr']),
    };
}

