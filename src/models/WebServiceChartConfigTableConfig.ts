/* tslint:disable */
/* eslint-disable */
/**
 * Sentio API
 * Sentio Open API for query data
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { WebServiceChartConfigCalculation } from './WebServiceChartConfigCalculation';
import {
    WebServiceChartConfigCalculationFromJSON,
    WebServiceChartConfigCalculationFromJSONTyped,
    WebServiceChartConfigCalculationToJSON,
} from './WebServiceChartConfigCalculation';
import type { WebServiceChartConfigColumnSort } from './WebServiceChartConfigColumnSort';
import {
    WebServiceChartConfigColumnSortFromJSON,
    WebServiceChartConfigColumnSortFromJSONTyped,
    WebServiceChartConfigColumnSortToJSON,
} from './WebServiceChartConfigColumnSort';
import type { WebServiceChartConfigValueConfig } from './WebServiceChartConfigValueConfig';
import {
    WebServiceChartConfigValueConfigFromJSON,
    WebServiceChartConfigValueConfigFromJSONTyped,
    WebServiceChartConfigValueConfigToJSON,
} from './WebServiceChartConfigValueConfig';

/**
 * 
 * @export
 * @interface WebServiceChartConfigTableConfig
 */
export interface WebServiceChartConfigTableConfig {
    /**
     * 
     * @type {WebServiceChartConfigCalculation}
     * @memberof WebServiceChartConfigTableConfig
     */
    calculation?: WebServiceChartConfigCalculation;
    /**
     * 
     * @type {{ [key: string]: boolean; }}
     * @memberof WebServiceChartConfigTableConfig
     */
    showColumns?: { [key: string]: boolean; };
    /**
     * 
     * @type {Array<WebServiceChartConfigColumnSort>}
     * @memberof WebServiceChartConfigTableConfig
     */
    sortColumns?: Array<WebServiceChartConfigColumnSort>;
    /**
     * 
     * @type {Array<string>}
     * @memberof WebServiceChartConfigTableConfig
     */
    columnOrders?: Array<string>;
    /**
     * 
     * @type {{ [key: string]: number; }}
     * @memberof WebServiceChartConfigTableConfig
     */
    columnWidths?: { [key: string]: number; };
    /**
     * 
     * @type {boolean}
     * @memberof WebServiceChartConfigTableConfig
     */
    showPlainData?: boolean;
    /**
     * 
     * @type {{ [key: string]: WebServiceChartConfigCalculation; }}
     * @memberof WebServiceChartConfigTableConfig
     */
    calculations?: { [key: string]: WebServiceChartConfigCalculation; };
    /**
     * 
     * @type {{ [key: string]: WebServiceChartConfigValueConfig; }}
     * @memberof WebServiceChartConfigTableConfig
     */
    valueConfigs?: { [key: string]: WebServiceChartConfigValueConfig; };
}

/**
 * Check if a given object implements the WebServiceChartConfigTableConfig interface.
 */
export function instanceOfWebServiceChartConfigTableConfig(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function WebServiceChartConfigTableConfigFromJSON(json: any): WebServiceChartConfigTableConfig {
    return WebServiceChartConfigTableConfigFromJSONTyped(json, false);
}

export function WebServiceChartConfigTableConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebServiceChartConfigTableConfig {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'calculation': !exists(json, 'calculation') ? undefined : WebServiceChartConfigCalculationFromJSON(json['calculation']),
        'showColumns': !exists(json, 'showColumns') ? undefined : json['showColumns'],
        'sortColumns': !exists(json, 'sortColumns') ? undefined : ((json['sortColumns'] as Array<any>).map(WebServiceChartConfigColumnSortFromJSON)),
        'columnOrders': !exists(json, 'columnOrders') ? undefined : json['columnOrders'],
        'columnWidths': !exists(json, 'columnWidths') ? undefined : json['columnWidths'],
        'showPlainData': !exists(json, 'showPlainData') ? undefined : json['showPlainData'],
        'calculations': !exists(json, 'calculations') ? undefined : (mapValues(json['calculations'], WebServiceChartConfigCalculationFromJSON)),
        'valueConfigs': !exists(json, 'valueConfigs') ? undefined : (mapValues(json['valueConfigs'], WebServiceChartConfigValueConfigFromJSON)),
    };
}

export function WebServiceChartConfigTableConfigToJSON(value?: WebServiceChartConfigTableConfig | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'calculation': WebServiceChartConfigCalculationToJSON(value.calculation),
        'showColumns': value.showColumns,
        'sortColumns': value.sortColumns === undefined ? undefined : ((value.sortColumns as Array<any>).map(WebServiceChartConfigColumnSortToJSON)),
        'columnOrders': value.columnOrders,
        'columnWidths': value.columnWidths,
        'showPlainData': value.showPlainData,
        'calculations': value.calculations === undefined ? undefined : (mapValues(value.calculations, WebServiceChartConfigCalculationToJSON)),
        'valueConfigs': value.valueConfigs === undefined ? undefined : (mapValues(value.valueConfigs, WebServiceChartConfigValueConfigToJSON)),
    };
}

