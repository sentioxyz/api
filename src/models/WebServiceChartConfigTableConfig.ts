/* tslint:disable */
/* eslint-disable */
/**
 * Sentio API
 * Sentio Open API for query data
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { WebServiceChartConfigCalculation } from './WebServiceChartConfigCalculation.js';
import {
    WebServiceChartConfigCalculationFromJSON,
    WebServiceChartConfigCalculationFromJSONTyped,
    WebServiceChartConfigCalculationToJSON,
} from './WebServiceChartConfigCalculation.js';
import type { WebServiceChartConfigColumnSort } from './WebServiceChartConfigColumnSort.js';
import {
    WebServiceChartConfigColumnSortFromJSON,
    WebServiceChartConfigColumnSortFromJSONTyped,
    WebServiceChartConfigColumnSortToJSON,
} from './WebServiceChartConfigColumnSort.js';
import type { WebServiceChartConfigValueConfig } from './WebServiceChartConfigValueConfig.js';
import {
    WebServiceChartConfigValueConfigFromJSON,
    WebServiceChartConfigValueConfigFromJSONTyped,
    WebServiceChartConfigValueConfigToJSON,
} from './WebServiceChartConfigValueConfig.js';

/**
 * 
 * @export
 * @interface WebServiceChartConfigTableConfig
 */
export interface WebServiceChartConfigTableConfig {
    /**
     * 
     * @type {WebServiceChartConfigCalculation}
     * @memberof WebServiceChartConfigTableConfig
     */
    calculation?: WebServiceChartConfigCalculation;
    /**
     * 
     * @type {{ [key: string]: boolean; }}
     * @memberof WebServiceChartConfigTableConfig
     */
    showColumns?: { [key: string]: boolean; };
    /**
     * 
     * @type {Array<WebServiceChartConfigColumnSort>}
     * @memberof WebServiceChartConfigTableConfig
     */
    sortColumns?: Array<WebServiceChartConfigColumnSort>;
    /**
     * 
     * @type {Array<string>}
     * @memberof WebServiceChartConfigTableConfig
     */
    columnOrders?: Array<string>;
    /**
     * 
     * @type {{ [key: string]: number; }}
     * @memberof WebServiceChartConfigTableConfig
     */
    columnWidths?: { [key: string]: number; };
    /**
     * 
     * @type {boolean}
     * @memberof WebServiceChartConfigTableConfig
     */
    showPlainData?: boolean;
    /**
     * 
     * @type {{ [key: string]: WebServiceChartConfigCalculation; }}
     * @memberof WebServiceChartConfigTableConfig
     */
    calculations?: { [key: string]: WebServiceChartConfigCalculation; };
    /**
     * 
     * @type {{ [key: string]: WebServiceChartConfigValueConfig; }}
     * @memberof WebServiceChartConfigTableConfig
     */
    valueConfigs?: { [key: string]: WebServiceChartConfigValueConfig; };
    /**
     * 
     * @type {number}
     * @memberof WebServiceChartConfigTableConfig
     */
    rowLimit?: number;
}

/**
 * Check if a given object implements the WebServiceChartConfigTableConfig interface.
 */
export function instanceOfWebServiceChartConfigTableConfig(value: object): boolean {
    return true;
}

export function WebServiceChartConfigTableConfigFromJSON(json: any): WebServiceChartConfigTableConfig {
    return WebServiceChartConfigTableConfigFromJSONTyped(json, false);
}

export function WebServiceChartConfigTableConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebServiceChartConfigTableConfig {
    if (json == null) {
        return json;
    }
    return {
        
        'calculation': json['calculation'] == null ? undefined : WebServiceChartConfigCalculationFromJSON(json['calculation']),
        'showColumns': json['showColumns'] == null ? undefined : json['showColumns'],
        'sortColumns': json['sortColumns'] == null ? undefined : ((json['sortColumns'] as Array<any>).map(WebServiceChartConfigColumnSortFromJSON)),
        'columnOrders': json['columnOrders'] == null ? undefined : json['columnOrders'],
        'columnWidths': json['columnWidths'] == null ? undefined : json['columnWidths'],
        'showPlainData': json['showPlainData'] == null ? undefined : json['showPlainData'],
        'calculations': json['calculations'] == null ? undefined : (mapValues(json['calculations'], WebServiceChartConfigCalculationFromJSON)),
        'valueConfigs': json['valueConfigs'] == null ? undefined : (mapValues(json['valueConfigs'], WebServiceChartConfigValueConfigFromJSON)),
        'rowLimit': json['rowLimit'] == null ? undefined : json['rowLimit'],
    };
}

export function WebServiceChartConfigTableConfigToJSON(value?: WebServiceChartConfigTableConfig | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'calculation': WebServiceChartConfigCalculationToJSON(value['calculation']),
        'showColumns': value['showColumns'],
        'sortColumns': value['sortColumns'] == null ? undefined : ((value['sortColumns'] as Array<any>).map(WebServiceChartConfigColumnSortToJSON)),
        'columnOrders': value['columnOrders'],
        'columnWidths': value['columnWidths'],
        'showPlainData': value['showPlainData'],
        'calculations': value['calculations'] == null ? undefined : (mapValues(value['calculations'], WebServiceChartConfigCalculationToJSON)),
        'valueConfigs': value['valueConfigs'] == null ? undefined : (mapValues(value['valueConfigs'], WebServiceChartConfigValueConfigToJSON)),
        'rowLimit': value['rowLimit'],
    };
}

