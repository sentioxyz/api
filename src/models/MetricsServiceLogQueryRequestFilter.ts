/* tslint:disable */
/* eslint-disable */
/**
 * Sentio API
 * Sentio Open API for query data
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MetricsServiceLogQueryRequestFilter
 */
export interface MetricsServiceLogQueryRequestFilter {
    /**
     * 
     * @type {string}
     * @memberof MetricsServiceLogQueryRequestFilter
     */
    field?: string;
    /**
     * 
     * @type {string}
     * @memberof MetricsServiceLogQueryRequestFilter
     */
    value?: string;
    /**
     * 
     * @type {boolean}
     * @memberof MetricsServiceLogQueryRequestFilter
     */
    not?: boolean;
}

/**
 * Check if a given object implements the MetricsServiceLogQueryRequestFilter interface.
 */
export function instanceOfMetricsServiceLogQueryRequestFilter(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MetricsServiceLogQueryRequestFilterFromJSON(json: any): MetricsServiceLogQueryRequestFilter {
    return MetricsServiceLogQueryRequestFilterFromJSONTyped(json, false);
}

export function MetricsServiceLogQueryRequestFilterFromJSONTyped(json: any, ignoreDiscriminator: boolean): MetricsServiceLogQueryRequestFilter {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'field': !exists(json, 'field') ? undefined : json['field'],
        'value': !exists(json, 'value') ? undefined : json['value'],
        'not': !exists(json, 'not') ? undefined : json['not'],
    };
}

export function MetricsServiceLogQueryRequestFilterToJSON(value?: MetricsServiceLogQueryRequestFilter | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'field': value.field,
        'value': value.value,
        'not': value.not,
    };
}

