/* tslint:disable */
/* eslint-disable */
/**
 * Sentio API
 * Sentio Open API for query data
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CommonFormula } from './CommonFormula';
import {
    CommonFormulaFromJSON,
    CommonFormulaFromJSONTyped,
    CommonFormulaToJSON,
} from './CommonFormula';
import type { CommonQuery } from './CommonQuery';
import {
    CommonQueryFromJSON,
    CommonQueryFromJSONTyped,
    CommonQueryToJSON,
} from './CommonQuery';
import type { CommonSegmentationQuery } from './CommonSegmentationQuery';
import {
    CommonSegmentationQueryFromJSON,
    CommonSegmentationQueryFromJSONTyped,
    CommonSegmentationQueryToJSON,
} from './CommonSegmentationQuery';
import type { WebServiceChartChartType } from './WebServiceChartChartType';
import {
    WebServiceChartChartTypeFromJSON,
    WebServiceChartChartTypeFromJSONTyped,
    WebServiceChartChartTypeToJSON,
} from './WebServiceChartChartType';
import type { WebServiceChartConfig } from './WebServiceChartConfig';
import {
    WebServiceChartConfigFromJSON,
    WebServiceChartConfigFromJSONTyped,
    WebServiceChartConfigToJSON,
} from './WebServiceChartConfig';
import type { WebServiceChartDataSourceType } from './WebServiceChartDataSourceType';
import {
    WebServiceChartDataSourceTypeFromJSON,
    WebServiceChartDataSourceTypeFromJSONTyped,
    WebServiceChartDataSourceTypeToJSON,
} from './WebServiceChartDataSourceType';
import type { WebServiceNote } from './WebServiceNote';
import {
    WebServiceNoteFromJSON,
    WebServiceNoteFromJSONTyped,
    WebServiceNoteToJSON,
} from './WebServiceNote';

/**
 * 
 * @export
 * @interface WebServiceChart
 */
export interface WebServiceChart {
    /**
     * 
     * @type {WebServiceChartChartType}
     * @memberof WebServiceChart
     */
    type?: WebServiceChartChartType;
    /**
     * 
     * @type {Array<CommonQuery>}
     * @memberof WebServiceChart
     */
    queries?: Array<CommonQuery>;
    /**
     * 
     * @type {Array<CommonFormula>}
     * @memberof WebServiceChart
     */
    formulas?: Array<CommonFormula>;
    /**
     * 
     * @type {WebServiceChartConfig}
     * @memberof WebServiceChart
     */
    config?: WebServiceChartConfig;
    /**
     * 
     * @type {WebServiceNote}
     * @memberof WebServiceChart
     */
    note?: WebServiceNote;
    /**
     * 
     * @type {WebServiceChartDataSourceType}
     * @memberof WebServiceChart
     */
    datasourceType?: WebServiceChartDataSourceType;
    /**
     * 
     * @type {Array<CommonSegmentationQuery>}
     * @memberof WebServiceChart
     */
    segmentationQueries?: Array<CommonSegmentationQuery>;
}

/**
 * Check if a given object implements the WebServiceChart interface.
 */
export function instanceOfWebServiceChart(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function WebServiceChartFromJSON(json: any): WebServiceChart {
    return WebServiceChartFromJSONTyped(json, false);
}

export function WebServiceChartFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebServiceChart {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': !exists(json, 'type') ? undefined : WebServiceChartChartTypeFromJSON(json['type']),
        'queries': !exists(json, 'queries') ? undefined : ((json['queries'] as Array<any>).map(CommonQueryFromJSON)),
        'formulas': !exists(json, 'formulas') ? undefined : ((json['formulas'] as Array<any>).map(CommonFormulaFromJSON)),
        'config': !exists(json, 'config') ? undefined : WebServiceChartConfigFromJSON(json['config']),
        'note': !exists(json, 'note') ? undefined : WebServiceNoteFromJSON(json['note']),
        'datasourceType': !exists(json, 'datasourceType') ? undefined : WebServiceChartDataSourceTypeFromJSON(json['datasourceType']),
        'segmentationQueries': !exists(json, 'segmentationQueries') ? undefined : ((json['segmentationQueries'] as Array<any>).map(CommonSegmentationQueryFromJSON)),
    };
}

export function WebServiceChartToJSON(value?: WebServiceChart | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': WebServiceChartChartTypeToJSON(value.type),
        'queries': value.queries === undefined ? undefined : ((value.queries as Array<any>).map(CommonQueryToJSON)),
        'formulas': value.formulas === undefined ? undefined : ((value.formulas as Array<any>).map(CommonFormulaToJSON)),
        'config': WebServiceChartConfigToJSON(value.config),
        'note': WebServiceNoteToJSON(value.note),
        'datasourceType': WebServiceChartDataSourceTypeToJSON(value.datasourceType),
        'segmentationQueries': value.segmentationQueries === undefined ? undefined : ((value.segmentationQueries as Array<any>).map(CommonSegmentationQueryToJSON)),
    };
}

