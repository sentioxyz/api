/* tslint:disable */
/* eslint-disable */
/**
 * Sentio API
 * Sentio Open API for query data
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { SolidityServiceMetadata } from './SolidityServiceMetadata.js';
import {
    SolidityServiceMetadataFromJSON,
    SolidityServiceMetadataFromJSONTyped,
    SolidityServiceMetadataToJSON,
} from './SolidityServiceMetadata.js';
import type { SolidityServiceOptimizer } from './SolidityServiceOptimizer.js';
import {
    SolidityServiceOptimizerFromJSON,
    SolidityServiceOptimizerFromJSONTyped,
    SolidityServiceOptimizerToJSON,
} from './SolidityServiceOptimizer.js';

/**
 * 
 * @export
 * @interface SolidityServiceSettings
 */
export interface SolidityServiceSettings {
    /**
     * 
     * @type {Array<string>}
     * @memberof SolidityServiceSettings
     */
    remappings?: Array<string>;
    /**
     * 
     * @type {SolidityServiceOptimizer}
     * @memberof SolidityServiceSettings
     */
    optimizer?: SolidityServiceOptimizer;
    /**
     * 
     * @type {string}
     * @memberof SolidityServiceSettings
     */
    evmVersion?: string;
    /**
     * 
     * @type {SolidityServiceMetadata}
     * @memberof SolidityServiceSettings
     */
    metadata?: SolidityServiceMetadata;
    /**
     * 
     * @type {boolean}
     * @memberof SolidityServiceSettings
     */
    viaIR?: boolean;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof SolidityServiceSettings
     */
    compilationTarget?: { [key: string]: string; };
}

/**
 * Check if a given object implements the SolidityServiceSettings interface.
 */
export function instanceOfSolidityServiceSettings(value: object): boolean {
    return true;
}

export function SolidityServiceSettingsFromJSON(json: any): SolidityServiceSettings {
    return SolidityServiceSettingsFromJSONTyped(json, false);
}

export function SolidityServiceSettingsFromJSONTyped(json: any, ignoreDiscriminator: boolean): SolidityServiceSettings {
    if (json == null) {
        return json;
    }
    return {
        
        'remappings': json['remappings'] == null ? undefined : json['remappings'],
        'optimizer': json['optimizer'] == null ? undefined : SolidityServiceOptimizerFromJSON(json['optimizer']),
        'evmVersion': json['evmVersion'] == null ? undefined : json['evmVersion'],
        'metadata': json['metadata'] == null ? undefined : SolidityServiceMetadataFromJSON(json['metadata']),
        'viaIR': json['viaIR'] == null ? undefined : json['viaIR'],
        'compilationTarget': json['compilationTarget'] == null ? undefined : json['compilationTarget'],
    };
}

export function SolidityServiceSettingsToJSON(value?: SolidityServiceSettings | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'remappings': value['remappings'],
        'optimizer': SolidityServiceOptimizerToJSON(value['optimizer']),
        'evmVersion': value['evmVersion'],
        'metadata': SolidityServiceMetadataToJSON(value['metadata']),
        'viaIR': value['viaIR'],
        'compilationTarget': value['compilationTarget'],
    };
}

