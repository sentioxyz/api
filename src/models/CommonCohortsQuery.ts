/* tslint:disable */
/* eslint-disable */
/**
 * Sentio API
 * Sentio Open API for query data
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { CommonJoinOperator } from './CommonJoinOperator.js';
import {
    CommonJoinOperatorFromJSON,
    CommonJoinOperatorFromJSONTyped,
    CommonJoinOperatorToJSON,
    CommonJoinOperatorToJSONTyped,
} from './CommonJoinOperator.js';
import type { CommonCohortsGroup } from './CommonCohortsGroup.js';
import {
    CommonCohortsGroupFromJSON,
    CommonCohortsGroupFromJSONTyped,
    CommonCohortsGroupToJSON,
    CommonCohortsGroupToJSONTyped,
} from './CommonCohortsGroup.js';

/**
 * 
 * @export
 * @interface CommonCohortsQuery
 */
export interface CommonCohortsQuery {
    /**
     * 
     * @type {CommonJoinOperator}
     * @memberof CommonCohortsQuery
     */
    joinOperator?: CommonJoinOperator;
    /**
     * 
     * @type {Array<CommonCohortsGroup>}
     * @memberof CommonCohortsQuery
     */
    groups?: Array<CommonCohortsGroup>;
    /**
     * 
     * @type {string}
     * @memberof CommonCohortsQuery
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof CommonCohortsQuery
     */
    id?: string;
}



/**
 * Check if a given object implements the CommonCohortsQuery interface.
 */
export function instanceOfCommonCohortsQuery(value: object): value is CommonCohortsQuery {
    return true;
}

export function CommonCohortsQueryFromJSON(json: any): CommonCohortsQuery {
    return CommonCohortsQueryFromJSONTyped(json, false);
}

export function CommonCohortsQueryFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommonCohortsQuery {
    if (json == null) {
        return json;
    }
    return {
        
        'joinOperator': json['joinOperator'] == null ? undefined : CommonJoinOperatorFromJSON(json['joinOperator']),
        'groups': json['groups'] == null ? undefined : ((json['groups'] as Array<any>).map(CommonCohortsGroupFromJSON)),
        'name': json['name'] == null ? undefined : json['name'],
        'id': json['id'] == null ? undefined : json['id'],
    };
}

  export function CommonCohortsQueryToJSON(json: any): CommonCohortsQuery {
      return CommonCohortsQueryToJSONTyped(json, false);
  }

  export function CommonCohortsQueryToJSONTyped(value?: CommonCohortsQuery | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'joinOperator': CommonJoinOperatorToJSON(value['joinOperator']),
        'groups': value['groups'] == null ? undefined : ((value['groups'] as Array<any>).map(CommonCohortsGroupToJSON)),
        'name': value['name'],
        'id': value['id'],
    };
}

