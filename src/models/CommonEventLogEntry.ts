/* tslint:disable */
/* eslint-disable */
/**
 * Sentio API
 * Sentio Open API for query data
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface CommonEventLogEntry
 */
export interface CommonEventLogEntry {
    /**
     * 
     * @type {string}
     * @memberof CommonEventLogEntry
     */
    message?: string;
    /**
     * 
     * @type {string}
     * @memberof CommonEventLogEntry
     */
    timestamp?: string;
    /**
     * 
     * @type {string}
     * @memberof CommonEventLogEntry
     */
    logLevel?: string;
    /**
     * 
     * @type {string}
     * @memberof CommonEventLogEntry
     */
    logType?: string;
    /**
     * 
     * @type {string}
     * @memberof CommonEventLogEntry
     */
    contractName?: string;
    /**
     * 
     * @type {string}
     * @memberof CommonEventLogEntry
     */
    contractAddress?: string;
    /**
     * 
     * @type {string}
     * @memberof CommonEventLogEntry
     */
    blockNumber?: string;
    /**
     * 
     * @type {string}
     * @memberof CommonEventLogEntry
     */
    chainId?: string;
    /**
     * 
     * @type {object}
     * @memberof CommonEventLogEntry
     */
    attributes?: object;
    /**
     * 
     * @type {string}
     * @memberof CommonEventLogEntry
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof CommonEventLogEntry
     */
    transactionHash?: string;
    /**
     * 
     * @type {string}
     * @memberof CommonEventLogEntry
     */
    highlightedMessage?: string;
    /**
     * 
     * @type {string}
     * @memberof CommonEventLogEntry
     */
    distinctId?: string;
    /**
     * 
     * @type {string}
     * @memberof CommonEventLogEntry
     */
    eventName?: string;
    /**
     * 
     * @type {number}
     * @memberof CommonEventLogEntry
     */
    logIndex?: number;
    /**
     * 
     * @type {number}
     * @memberof CommonEventLogEntry
     */
    transactionIndex?: number;
}

/**
 * Check if a given object implements the CommonEventLogEntry interface.
 */
export function instanceOfCommonEventLogEntry(value: object): boolean {
    return true;
}

export function CommonEventLogEntryFromJSON(json: any): CommonEventLogEntry {
    return CommonEventLogEntryFromJSONTyped(json, false);
}

export function CommonEventLogEntryFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommonEventLogEntry {
    if (json == null) {
        return json;
    }
    return {
        
        'message': json['message'] == null ? undefined : json['message'],
        'timestamp': json['timestamp'] == null ? undefined : json['timestamp'],
        'logLevel': json['logLevel'] == null ? undefined : json['logLevel'],
        'logType': json['logType'] == null ? undefined : json['logType'],
        'contractName': json['contractName'] == null ? undefined : json['contractName'],
        'contractAddress': json['contractAddress'] == null ? undefined : json['contractAddress'],
        'blockNumber': json['blockNumber'] == null ? undefined : json['blockNumber'],
        'chainId': json['chainId'] == null ? undefined : json['chainId'],
        'attributes': json['attributes'] == null ? undefined : json['attributes'],
        'id': json['id'] == null ? undefined : json['id'],
        'transactionHash': json['transactionHash'] == null ? undefined : json['transactionHash'],
        'highlightedMessage': json['highlightedMessage'] == null ? undefined : json['highlightedMessage'],
        'distinctId': json['distinctId'] == null ? undefined : json['distinctId'],
        'eventName': json['eventName'] == null ? undefined : json['eventName'],
        'logIndex': json['logIndex'] == null ? undefined : json['logIndex'],
        'transactionIndex': json['transactionIndex'] == null ? undefined : json['transactionIndex'],
    };
}

export function CommonEventLogEntryToJSON(value?: CommonEventLogEntry | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'message': value['message'],
        'timestamp': value['timestamp'],
        'logLevel': value['logLevel'],
        'logType': value['logType'],
        'contractName': value['contractName'],
        'contractAddress': value['contractAddress'],
        'blockNumber': value['blockNumber'],
        'chainId': value['chainId'],
        'attributes': value['attributes'],
        'id': value['id'],
        'transactionHash': value['transactionHash'],
        'highlightedMessage': value['highlightedMessage'],
        'distinctId': value['distinctId'],
        'eventName': value['eventName'],
        'logIndex': value['logIndex'],
        'transactionIndex': value['transactionIndex'],
    };
}

