/* tslint:disable */
/* eslint-disable */
/**
 * Sentio API
 * Sentio Open API for query data
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { SolidityServiceFork } from './SolidityServiceFork.js';
import {
    SolidityServiceForkFromJSON,
    SolidityServiceForkFromJSONTyped,
    SolidityServiceForkToJSON,
    SolidityServiceForkToJSONTyped,
} from './SolidityServiceFork.js';

/**
 * 
 * @export
 * @interface SolidityServiceListForksResponse
 */
export interface SolidityServiceListForksResponse {
    /**
     * 
     * @type {Array<SolidityServiceFork>}
     * @memberof SolidityServiceListForksResponse
     */
    forks?: Array<SolidityServiceFork>;
}

/**
 * Check if a given object implements the SolidityServiceListForksResponse interface.
 */
export function instanceOfSolidityServiceListForksResponse(value: object): value is SolidityServiceListForksResponse {
    return true;
}

export function SolidityServiceListForksResponseFromJSON(json: any): SolidityServiceListForksResponse {
    return SolidityServiceListForksResponseFromJSONTyped(json, false);
}

export function SolidityServiceListForksResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SolidityServiceListForksResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'forks': json['forks'] == null ? undefined : ((json['forks'] as Array<any>).map(SolidityServiceForkFromJSON)),
    };
}

  export function SolidityServiceListForksResponseToJSON(json: any): SolidityServiceListForksResponse {
      return SolidityServiceListForksResponseToJSONTyped(json, false);
  }

  export function SolidityServiceListForksResponseToJSONTyped(value?: SolidityServiceListForksResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'forks': value['forks'] == null ? undefined : ((value['forks'] as Array<any>).map(SolidityServiceForkToJSON)),
    };
}

