/* tslint:disable */
/* eslint-disable */
/**
 * Sentio API
 * Sentio Open API for query data
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { CommonFunction } from './CommonFunction.js';
import {
    CommonFunctionFromJSON,
    CommonFunctionFromJSONTyped,
    CommonFunctionToJSON,
} from './CommonFunction.js';
import type { CommonSegmentationQueryAggregation } from './CommonSegmentationQueryAggregation.js';
import {
    CommonSegmentationQueryAggregationFromJSON,
    CommonSegmentationQueryAggregationFromJSONTyped,
    CommonSegmentationQueryAggregationToJSON,
} from './CommonSegmentationQueryAggregation.js';
import type { CommonSegmentationQueryResource } from './CommonSegmentationQueryResource.js';
import {
    CommonSegmentationQueryResourceFromJSON,
    CommonSegmentationQueryResourceFromJSONTyped,
    CommonSegmentationQueryResourceToJSON,
} from './CommonSegmentationQueryResource.js';
import type { CommonSegmentationQuerySelectorExpr } from './CommonSegmentationQuerySelectorExpr.js';
import {
    CommonSegmentationQuerySelectorExprFromJSON,
    CommonSegmentationQuerySelectorExprFromJSONTyped,
    CommonSegmentationQuerySelectorExprToJSON,
} from './CommonSegmentationQuerySelectorExpr.js';

/**
 * 
 * @export
 * @interface CommonSegmentationQuery
 */
export interface CommonSegmentationQuery {
    /**
     * 
     * @type {CommonSegmentationQueryResource}
     * @memberof CommonSegmentationQuery
     */
    resource?: CommonSegmentationQueryResource;
    /**
     * 
     * @type {string}
     * @memberof CommonSegmentationQuery
     */
    alias?: string;
    /**
     * 
     * @type {string}
     * @memberof CommonSegmentationQuery
     */
    id?: string;
    /**
     * 
     * @type {CommonSegmentationQueryAggregation}
     * @memberof CommonSegmentationQuery
     */
    aggregation?: CommonSegmentationQueryAggregation;
    /**
     * 
     * @type {CommonSegmentationQuerySelectorExpr}
     * @memberof CommonSegmentationQuery
     */
    selectorExpr?: CommonSegmentationQuerySelectorExpr;
    /**
     * 
     * @type {Array<string>}
     * @memberof CommonSegmentationQuery
     */
    groupBy?: Array<string>;
    /**
     * 
     * @type {number}
     * @memberof CommonSegmentationQuery
     */
    limit?: number;
    /**
     * 
     * @type {Array<CommonFunction>}
     * @memberof CommonSegmentationQuery
     */
    functions?: Array<CommonFunction>;
    /**
     * 
     * @type {boolean}
     * @memberof CommonSegmentationQuery
     */
    disabled?: boolean;
}

/**
 * Check if a given object implements the CommonSegmentationQuery interface.
 */
export function instanceOfCommonSegmentationQuery(value: object): boolean {
    return true;
}

export function CommonSegmentationQueryFromJSON(json: any): CommonSegmentationQuery {
    return CommonSegmentationQueryFromJSONTyped(json, false);
}

export function CommonSegmentationQueryFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommonSegmentationQuery {
    if (json == null) {
        return json;
    }
    return {
        
        'resource': json['resource'] == null ? undefined : CommonSegmentationQueryResourceFromJSON(json['resource']),
        'alias': json['alias'] == null ? undefined : json['alias'],
        'id': json['id'] == null ? undefined : json['id'],
        'aggregation': json['aggregation'] == null ? undefined : CommonSegmentationQueryAggregationFromJSON(json['aggregation']),
        'selectorExpr': json['selectorExpr'] == null ? undefined : CommonSegmentationQuerySelectorExprFromJSON(json['selectorExpr']),
        'groupBy': json['groupBy'] == null ? undefined : json['groupBy'],
        'limit': json['limit'] == null ? undefined : json['limit'],
        'functions': json['functions'] == null ? undefined : ((json['functions'] as Array<any>).map(CommonFunctionFromJSON)),
        'disabled': json['disabled'] == null ? undefined : json['disabled'],
    };
}

export function CommonSegmentationQueryToJSON(value?: CommonSegmentationQuery | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'resource': CommonSegmentationQueryResourceToJSON(value['resource']),
        'alias': value['alias'],
        'id': value['id'],
        'aggregation': CommonSegmentationQueryAggregationToJSON(value['aggregation']),
        'selectorExpr': CommonSegmentationQuerySelectorExprToJSON(value['selectorExpr']),
        'groupBy': value['groupBy'],
        'limit': value['limit'],
        'functions': value['functions'] == null ? undefined : ((value['functions'] as Array<any>).map(CommonFunctionToJSON)),
        'disabled': value['disabled'],
    };
}

