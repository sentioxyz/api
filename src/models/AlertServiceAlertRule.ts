/**
 * Sentio API
 * Sentio Open API for query data
 *
 * OpenAPI spec version: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { AlertServiceAlertRuleState } from '../models/AlertServiceAlertRuleState.js';
import { AlertServiceAlertType } from '../models/AlertServiceAlertType.js';
import { AlertServiceCondition } from '../models/AlertServiceCondition.js';
import { AlertServiceLogCondition } from '../models/AlertServiceLogCondition.js';
import { CommonChannel } from '../models/CommonChannel.js';
import { CommonDuration } from '../models/CommonDuration.js';
import { HttpFile } from '../http/http.js';

export class AlertServiceAlertRule {
    'id'?: string;
    'projectId'?: string;
    'state'?: AlertServiceAlertRuleState;
    'subject'?: string;
    'message'?: string;
    'group'?: string;
    'query'?: string;
    '_for'?: CommonDuration;
    'channels'?: Array<CommonChannel>;
    'updateTime'?: Date;
    'condition'?: AlertServiceCondition;
    'renotifyDuration'?: CommonDuration;
    'renotifyLimit'?: number;
    'alertType'?: AlertServiceAlertType;
    'logCondition'?: AlertServiceLogCondition;
    'lastQueryTime'?: Date;
    'mute'?: boolean;
    'interval'?: CommonDuration;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "projectId",
            "baseName": "projectId",
            "type": "string",
            "format": ""
        },
        {
            "name": "state",
            "baseName": "state",
            "type": "AlertServiceAlertRuleState",
            "format": ""
        },
        {
            "name": "subject",
            "baseName": "subject",
            "type": "string",
            "format": ""
        },
        {
            "name": "message",
            "baseName": "message",
            "type": "string",
            "format": ""
        },
        {
            "name": "group",
            "baseName": "group",
            "type": "string",
            "format": ""
        },
        {
            "name": "query",
            "baseName": "query",
            "type": "string",
            "format": ""
        },
        {
            "name": "_for",
            "baseName": "for",
            "type": "CommonDuration",
            "format": ""
        },
        {
            "name": "channels",
            "baseName": "channels",
            "type": "Array<CommonChannel>",
            "format": ""
        },
        {
            "name": "updateTime",
            "baseName": "updateTime",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "condition",
            "baseName": "condition",
            "type": "AlertServiceCondition",
            "format": ""
        },
        {
            "name": "renotifyDuration",
            "baseName": "renotifyDuration",
            "type": "CommonDuration",
            "format": ""
        },
        {
            "name": "renotifyLimit",
            "baseName": "renotifyLimit",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "alertType",
            "baseName": "alertType",
            "type": "AlertServiceAlertType",
            "format": ""
        },
        {
            "name": "logCondition",
            "baseName": "logCondition",
            "type": "AlertServiceLogCondition",
            "format": ""
        },
        {
            "name": "lastQueryTime",
            "baseName": "lastQueryTime",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "mute",
            "baseName": "mute",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "interval",
            "baseName": "interval",
            "type": "CommonDuration",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return AlertServiceAlertRule.attributeTypeMap;
    }

    public constructor() {
    }
}


