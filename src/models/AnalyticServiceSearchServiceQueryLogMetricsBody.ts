/* tslint:disable */
/* eslint-disable */
/**
 * Sentio API
 * Sentio Open API for query data
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AnalyticServiceLogQueryRequestFilter } from './AnalyticServiceLogQueryRequestFilter';
import {
    AnalyticServiceLogQueryRequestFilterFromJSON,
    AnalyticServiceLogQueryRequestFilterFromJSONTyped,
    AnalyticServiceLogQueryRequestFilterToJSON,
} from './AnalyticServiceLogQueryRequestFilter';
import type { AnalyticServiceLogQueryRequestSort } from './AnalyticServiceLogQueryRequestSort';
import {
    AnalyticServiceLogQueryRequestSortFromJSON,
    AnalyticServiceLogQueryRequestSortFromJSONTyped,
    AnalyticServiceLogQueryRequestSortToJSON,
} from './AnalyticServiceLogQueryRequestSort';
import type { CommonAny } from './CommonAny';
import {
    CommonAnyFromJSON,
    CommonAnyFromJSONTyped,
    CommonAnyToJSON,
} from './CommonAny';
import type { CommonTimeRange } from './CommonTimeRange';
import {
    CommonTimeRangeFromJSON,
    CommonTimeRangeFromJSONTyped,
    CommonTimeRangeToJSON,
} from './CommonTimeRange';

/**
 * 
 * @export
 * @interface AnalyticServiceSearchServiceQueryLogMetricsBody
 */
export interface AnalyticServiceSearchServiceQueryLogMetricsBody {
    /**
     * 
     * @type {string}
     * @memberof AnalyticServiceSearchServiceQueryLogMetricsBody
     */
    projectId?: string;
    /**
     * 
     * @type {string}
     * @memberof AnalyticServiceSearchServiceQueryLogMetricsBody
     */
    query?: string;
    /**
     * 
     * @type {CommonTimeRange}
     * @memberof AnalyticServiceSearchServiceQueryLogMetricsBody
     */
    timeRange?: CommonTimeRange;
    /**
     * 
     * @type {Array<AnalyticServiceLogQueryRequestSort>}
     * @memberof AnalyticServiceSearchServiceQueryLogMetricsBody
     */
    sorts?: Array<AnalyticServiceLogQueryRequestSort>;
    /**
     * 
     * @type {Array<CommonAny>}
     * @memberof AnalyticServiceSearchServiceQueryLogMetricsBody
     */
    after?: Array<CommonAny>;
    /**
     * 
     * @type {number}
     * @memberof AnalyticServiceSearchServiceQueryLogMetricsBody
     */
    limit?: number;
    /**
     * 
     * @type {number}
     * @memberof AnalyticServiceSearchServiceQueryLogMetricsBody
     */
    offset?: number;
    /**
     * 
     * @type {Array<AnalyticServiceLogQueryRequestFilter>}
     * @memberof AnalyticServiceSearchServiceQueryLogMetricsBody
     */
    filters?: Array<AnalyticServiceLogQueryRequestFilter>;
    /**
     * 
     * @type {number}
     * @memberof AnalyticServiceSearchServiceQueryLogMetricsBody
     */
    version?: number;
}

/**
 * Check if a given object implements the AnalyticServiceSearchServiceQueryLogMetricsBody interface.
 */
export function instanceOfAnalyticServiceSearchServiceQueryLogMetricsBody(value: object): boolean {
    return true;
}

export function AnalyticServiceSearchServiceQueryLogMetricsBodyFromJSON(json: any): AnalyticServiceSearchServiceQueryLogMetricsBody {
    return AnalyticServiceSearchServiceQueryLogMetricsBodyFromJSONTyped(json, false);
}

export function AnalyticServiceSearchServiceQueryLogMetricsBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): AnalyticServiceSearchServiceQueryLogMetricsBody {
    if (json == null) {
        return json;
    }
    return {
        
        'projectId': json['projectId'] == null ? undefined : json['projectId'],
        'query': json['query'] == null ? undefined : json['query'],
        'timeRange': json['timeRange'] == null ? undefined : CommonTimeRangeFromJSON(json['timeRange']),
        'sorts': json['sorts'] == null ? undefined : ((json['sorts'] as Array<any>).map(AnalyticServiceLogQueryRequestSortFromJSON)),
        'after': json['after'] == null ? undefined : ((json['after'] as Array<any>).map(CommonAnyFromJSON)),
        'limit': json['limit'] == null ? undefined : json['limit'],
        'offset': json['offset'] == null ? undefined : json['offset'],
        'filters': json['filters'] == null ? undefined : ((json['filters'] as Array<any>).map(AnalyticServiceLogQueryRequestFilterFromJSON)),
        'version': json['version'] == null ? undefined : json['version'],
    };
}

export function AnalyticServiceSearchServiceQueryLogMetricsBodyToJSON(value?: AnalyticServiceSearchServiceQueryLogMetricsBody | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'projectId': value['projectId'],
        'query': value['query'],
        'timeRange': CommonTimeRangeToJSON(value['timeRange']),
        'sorts': value['sorts'] == null ? undefined : ((value['sorts'] as Array<any>).map(AnalyticServiceLogQueryRequestSortToJSON)),
        'after': value['after'] == null ? undefined : ((value['after'] as Array<any>).map(CommonAnyToJSON)),
        'limit': value['limit'],
        'offset': value['offset'],
        'filters': value['filters'] == null ? undefined : ((value['filters'] as Array<any>).map(AnalyticServiceLogQueryRequestFilterToJSON)),
        'version': value['version'],
    };
}

