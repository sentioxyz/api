/* tslint:disable */
/* eslint-disable */
/**
 * Sentio API
 * Sentio Open API for query data
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CommonJoinOperator } from './CommonJoinOperator';
import {
    CommonJoinOperatorFromJSON,
    CommonJoinOperatorFromJSONTyped,
    CommonJoinOperatorToJSON,
} from './CommonJoinOperator';
import type { CommonSegmentationQuerySelectorExpr } from './CommonSegmentationQuerySelectorExpr';
import {
    CommonSegmentationQuerySelectorExprFromJSON,
    CommonSegmentationQuerySelectorExprFromJSONTyped,
    CommonSegmentationQuerySelectorExprToJSON,
} from './CommonSegmentationQuerySelectorExpr';

/**
 * 
 * @export
 * @interface CommonSegmentationQuerySelectorExprLogicExpr
 */
export interface CommonSegmentationQuerySelectorExprLogicExpr {
    /**
     * 
     * @type {Array<CommonSegmentationQuerySelectorExpr>}
     * @memberof CommonSegmentationQuerySelectorExprLogicExpr
     */
    expressions?: Array<CommonSegmentationQuerySelectorExpr>;
    /**
     * 
     * @type {CommonJoinOperator}
     * @memberof CommonSegmentationQuerySelectorExprLogicExpr
     */
    operator?: CommonJoinOperator;
}

/**
 * Check if a given object implements the CommonSegmentationQuerySelectorExprLogicExpr interface.
 */
export function instanceOfCommonSegmentationQuerySelectorExprLogicExpr(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CommonSegmentationQuerySelectorExprLogicExprFromJSON(json: any): CommonSegmentationQuerySelectorExprLogicExpr {
    return CommonSegmentationQuerySelectorExprLogicExprFromJSONTyped(json, false);
}

export function CommonSegmentationQuerySelectorExprLogicExprFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommonSegmentationQuerySelectorExprLogicExpr {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'expressions': !exists(json, 'expressions') ? undefined : ((json['expressions'] as Array<any>).map(CommonSegmentationQuerySelectorExprFromJSON)),
        'operator': !exists(json, 'operator') ? undefined : CommonJoinOperatorFromJSON(json['operator']),
    };
}

export function CommonSegmentationQuerySelectorExprLogicExprToJSON(value?: CommonSegmentationQuerySelectorExprLogicExpr | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'expressions': value.expressions === undefined ? undefined : ((value.expressions as Array<any>).map(CommonSegmentationQuerySelectorExprToJSON)),
        'operator': CommonJoinOperatorToJSON(value.operator),
    };
}

