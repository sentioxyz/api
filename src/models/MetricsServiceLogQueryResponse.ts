/* tslint:disable */
/* eslint-disable */
/**
 * Sentio API
 * Sentio Open API for query data
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CommonAny } from './CommonAny';
import {
    CommonAnyFromJSON,
    CommonAnyFromJSONTyped,
    CommonAnyToJSON,
} from './CommonAny';
import type { CommonLogEntry } from './CommonLogEntry';
import {
    CommonLogEntryFromJSON,
    CommonLogEntryFromJSONTyped,
    CommonLogEntryToJSON,
} from './CommonLogEntry';

/**
 * 
 * @export
 * @interface MetricsServiceLogQueryResponse
 */
export interface MetricsServiceLogQueryResponse {
    /**
     * 
     * @type {Array<CommonLogEntry>}
     * @memberof MetricsServiceLogQueryResponse
     */
    entries?: Array<CommonLogEntry>;
    /**
     * 
     * @type {Array<CommonAny>}
     * @memberof MetricsServiceLogQueryResponse
     */
    after?: Array<CommonAny>;
    /**
     * 
     * @type {string}
     * @memberof MetricsServiceLogQueryResponse
     */
    total?: string;
}

/**
 * Check if a given object implements the MetricsServiceLogQueryResponse interface.
 */
export function instanceOfMetricsServiceLogQueryResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MetricsServiceLogQueryResponseFromJSON(json: any): MetricsServiceLogQueryResponse {
    return MetricsServiceLogQueryResponseFromJSONTyped(json, false);
}

export function MetricsServiceLogQueryResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): MetricsServiceLogQueryResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'entries': !exists(json, 'entries') ? undefined : ((json['entries'] as Array<any>).map(CommonLogEntryFromJSON)),
        'after': !exists(json, 'after') ? undefined : ((json['after'] as Array<any>).map(CommonAnyFromJSON)),
        'total': !exists(json, 'total') ? undefined : json['total'],
    };
}

export function MetricsServiceLogQueryResponseToJSON(value?: MetricsServiceLogQueryResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'entries': value.entries === undefined ? undefined : ((value.entries as Array<any>).map(CommonLogEntryToJSON)),
        'after': value.after === undefined ? undefined : ((value.after as Array<any>).map(CommonAnyToJSON)),
        'total': value.total,
    };
}

