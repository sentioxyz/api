/* tslint:disable */
/* eslint-disable */
/**
 * Sentio API
 * Sentio Open API for query data
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CommonPermission } from './CommonPermission';
import {
    CommonPermissionFromJSON,
    CommonPermissionFromJSONTyped,
    CommonPermissionToJSON,
} from './CommonPermission';
import type { CommonProject } from './CommonProject';
import {
    CommonProjectFromJSON,
    CommonProjectFromJSONTyped,
    CommonProjectToJSON,
} from './CommonProject';

/**
 * 
 * @export
 * @interface WebServiceGetProjectResponse
 */
export interface WebServiceGetProjectResponse {
    /**
     * 
     * @type {CommonProject}
     * @memberof WebServiceGetProjectResponse
     */
    project?: CommonProject;
    /**
     * 
     * @type {Array<CommonPermission>}
     * @memberof WebServiceGetProjectResponse
     */
    permissions?: Array<CommonPermission>;
}

/**
 * Check if a given object implements the WebServiceGetProjectResponse interface.
 */
export function instanceOfWebServiceGetProjectResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function WebServiceGetProjectResponseFromJSON(json: any): WebServiceGetProjectResponse {
    return WebServiceGetProjectResponseFromJSONTyped(json, false);
}

export function WebServiceGetProjectResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebServiceGetProjectResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'project': !exists(json, 'project') ? undefined : CommonProjectFromJSON(json['project']),
        'permissions': !exists(json, 'permissions') ? undefined : ((json['permissions'] as Array<any>).map(CommonPermissionFromJSON)),
    };
}

export function WebServiceGetProjectResponseToJSON(value?: WebServiceGetProjectResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'project': CommonProjectToJSON(value.project),
        'permissions': value.permissions === undefined ? undefined : ((value.permissions as Array<any>).map(CommonPermissionToJSON)),
    };
}

