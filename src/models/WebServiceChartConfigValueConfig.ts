/* tslint:disable */
/* eslint-disable */
/**
 * Sentio API
 * Sentio Open API for query data
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { WebServiceChartConfigMappingRule } from './WebServiceChartConfigMappingRule';
import {
    WebServiceChartConfigMappingRuleFromJSON,
    WebServiceChartConfigMappingRuleFromJSONTyped,
    WebServiceChartConfigMappingRuleToJSON,
} from './WebServiceChartConfigMappingRule';
import type { WebServiceChartConfigValueConfigStyle } from './WebServiceChartConfigValueConfigStyle';
import {
    WebServiceChartConfigValueConfigStyleFromJSON,
    WebServiceChartConfigValueConfigStyleFromJSONTyped,
    WebServiceChartConfigValueConfigStyleToJSON,
} from './WebServiceChartConfigValueConfigStyle';
import type { WebServiceChartConfigValueFormatter } from './WebServiceChartConfigValueFormatter';
import {
    WebServiceChartConfigValueFormatterFromJSON,
    WebServiceChartConfigValueFormatterFromJSONTyped,
    WebServiceChartConfigValueFormatterToJSON,
} from './WebServiceChartConfigValueFormatter';

/**
 * 
 * @export
 * @interface WebServiceChartConfigValueConfig
 */
export interface WebServiceChartConfigValueConfig {
    /**
     * 
     * @type {WebServiceChartConfigValueFormatter}
     * @memberof WebServiceChartConfigValueConfig
     */
    valueFormatter?: WebServiceChartConfigValueFormatter;
    /**
     * 
     * @type {boolean}
     * @memberof WebServiceChartConfigValueConfig
     */
    showValueLabel?: boolean;
    /**
     * 
     * @type {number}
     * @memberof WebServiceChartConfigValueConfig
     */
    maxSignificantDigits?: number;
    /**
     * 
     * @type {string}
     * @memberof WebServiceChartConfigValueConfig
     */
    dateFormat?: string;
    /**
     * 
     * @type {Array<WebServiceChartConfigMappingRule>}
     * @memberof WebServiceChartConfigValueConfig
     */
    mappingRules?: Array<WebServiceChartConfigMappingRule>;
    /**
     * 
     * @type {WebServiceChartConfigValueConfigStyle}
     * @memberof WebServiceChartConfigValueConfig
     */
    style?: WebServiceChartConfigValueConfigStyle;
    /**
     * 
     * @type {number}
     * @memberof WebServiceChartConfigValueConfig
     */
    maxFractionDigits?: number;
    /**
     * 
     * @type {number}
     * @memberof WebServiceChartConfigValueConfig
     */
    precision?: number;
    /**
     * 
     * @type {string}
     * @memberof WebServiceChartConfigValueConfig
     */
    currencySymbol?: string;
}

/**
 * Check if a given object implements the WebServiceChartConfigValueConfig interface.
 */
export function instanceOfWebServiceChartConfigValueConfig(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function WebServiceChartConfigValueConfigFromJSON(json: any): WebServiceChartConfigValueConfig {
    return WebServiceChartConfigValueConfigFromJSONTyped(json, false);
}

export function WebServiceChartConfigValueConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebServiceChartConfigValueConfig {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'valueFormatter': !exists(json, 'valueFormatter') ? undefined : WebServiceChartConfigValueFormatterFromJSON(json['valueFormatter']),
        'showValueLabel': !exists(json, 'showValueLabel') ? undefined : json['showValueLabel'],
        'maxSignificantDigits': !exists(json, 'maxSignificantDigits') ? undefined : json['maxSignificantDigits'],
        'dateFormat': !exists(json, 'dateFormat') ? undefined : json['dateFormat'],
        'mappingRules': !exists(json, 'mappingRules') ? undefined : ((json['mappingRules'] as Array<any>).map(WebServiceChartConfigMappingRuleFromJSON)),
        'style': !exists(json, 'style') ? undefined : WebServiceChartConfigValueConfigStyleFromJSON(json['style']),
        'maxFractionDigits': !exists(json, 'maxFractionDigits') ? undefined : json['maxFractionDigits'],
        'precision': !exists(json, 'precision') ? undefined : json['precision'],
        'currencySymbol': !exists(json, 'currencySymbol') ? undefined : json['currencySymbol'],
    };
}

export function WebServiceChartConfigValueConfigToJSON(value?: WebServiceChartConfigValueConfig | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'valueFormatter': WebServiceChartConfigValueFormatterToJSON(value.valueFormatter),
        'showValueLabel': value.showValueLabel,
        'maxSignificantDigits': value.maxSignificantDigits,
        'dateFormat': value.dateFormat,
        'mappingRules': value.mappingRules === undefined ? undefined : ((value.mappingRules as Array<any>).map(WebServiceChartConfigMappingRuleToJSON)),
        'style': WebServiceChartConfigValueConfigStyleToJSON(value.style),
        'maxFractionDigits': value.maxFractionDigits,
        'precision': value.precision,
        'currencySymbol': value.currencySymbol,
    };
}

