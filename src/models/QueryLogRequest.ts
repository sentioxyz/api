/* tslint:disable */
/* eslint-disable */
/**
 * Sentio API
 * Sentio Open API for query data
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CommonAny } from './CommonAny';
import {
    CommonAnyFromJSON,
    CommonAnyFromJSONTyped,
    CommonAnyToJSON,
} from './CommonAny';
import type { CommonTimeRange } from './CommonTimeRange';
import {
    CommonTimeRangeFromJSON,
    CommonTimeRangeFromJSONTyped,
    CommonTimeRangeToJSON,
} from './CommonTimeRange';
import type { MetricsServiceLogQueryRequestFilter } from './MetricsServiceLogQueryRequestFilter';
import {
    MetricsServiceLogQueryRequestFilterFromJSON,
    MetricsServiceLogQueryRequestFilterFromJSONTyped,
    MetricsServiceLogQueryRequestFilterToJSON,
} from './MetricsServiceLogQueryRequestFilter';
import type { MetricsServiceLogQueryRequestSort } from './MetricsServiceLogQueryRequestSort';
import {
    MetricsServiceLogQueryRequestSortFromJSON,
    MetricsServiceLogQueryRequestSortFromJSONTyped,
    MetricsServiceLogQueryRequestSortToJSON,
} from './MetricsServiceLogQueryRequestSort';

/**
 * 
 * @export
 * @interface QueryLogRequest
 */
export interface QueryLogRequest {
    /**
     * 
     * @type {string}
     * @memberof QueryLogRequest
     */
    projectId?: string;
    /**
     * 
     * @type {string}
     * @memberof QueryLogRequest
     */
    query?: string;
    /**
     * 
     * @type {CommonTimeRange}
     * @memberof QueryLogRequest
     */
    timeRange?: CommonTimeRange;
    /**
     * 
     * @type {Array<MetricsServiceLogQueryRequestSort>}
     * @memberof QueryLogRequest
     */
    sorts?: Array<MetricsServiceLogQueryRequestSort>;
    /**
     * 
     * @type {Array<CommonAny>}
     * @memberof QueryLogRequest
     */
    after?: Array<CommonAny>;
    /**
     * 
     * @type {number}
     * @memberof QueryLogRequest
     */
    limit?: number;
    /**
     * 
     * @type {Array<MetricsServiceLogQueryRequestFilter>}
     * @memberof QueryLogRequest
     */
    filters?: Array<MetricsServiceLogQueryRequestFilter>;
    /**
     * 
     * @type {number}
     * @memberof QueryLogRequest
     */
    version?: number;
}

/**
 * Check if a given object implements the QueryLogRequest interface.
 */
export function instanceOfQueryLogRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function QueryLogRequestFromJSON(json: any): QueryLogRequest {
    return QueryLogRequestFromJSONTyped(json, false);
}

export function QueryLogRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): QueryLogRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'projectId': !exists(json, 'projectId') ? undefined : json['projectId'],
        'query': !exists(json, 'query') ? undefined : json['query'],
        'timeRange': !exists(json, 'timeRange') ? undefined : CommonTimeRangeFromJSON(json['timeRange']),
        'sorts': !exists(json, 'sorts') ? undefined : ((json['sorts'] as Array<any>).map(MetricsServiceLogQueryRequestSortFromJSON)),
        'after': !exists(json, 'after') ? undefined : ((json['after'] as Array<any>).map(CommonAnyFromJSON)),
        'limit': !exists(json, 'limit') ? undefined : json['limit'],
        'filters': !exists(json, 'filters') ? undefined : ((json['filters'] as Array<any>).map(MetricsServiceLogQueryRequestFilterFromJSON)),
        'version': !exists(json, 'version') ? undefined : json['version'],
    };
}

export function QueryLogRequestToJSON(value?: QueryLogRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'projectId': value.projectId,
        'query': value.query,
        'timeRange': CommonTimeRangeToJSON(value.timeRange),
        'sorts': value.sorts === undefined ? undefined : ((value.sorts as Array<any>).map(MetricsServiceLogQueryRequestSortToJSON)),
        'after': value.after === undefined ? undefined : ((value.after as Array<any>).map(CommonAnyToJSON)),
        'limit': value.limit,
        'filters': value.filters === undefined ? undefined : ((value.filters as Array<any>).map(MetricsServiceLogQueryRequestFilterToJSON)),
        'version': value.version,
    };
}

