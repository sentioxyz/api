/* tslint:disable */
/* eslint-disable */
/**
 * Sentio API
 * Sentio Open API for query data
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { SolidityServiceNodeEnvironment } from './SolidityServiceNodeEnvironment.js';
import {
    SolidityServiceNodeEnvironmentFromJSON,
    SolidityServiceNodeEnvironmentFromJSONTyped,
    SolidityServiceNodeEnvironmentToJSON,
    SolidityServiceNodeEnvironmentToJSONTyped,
} from './SolidityServiceNodeEnvironment.js';
import type { SolidityServiceNodeForkConfig } from './SolidityServiceNodeForkConfig.js';
import {
    SolidityServiceNodeForkConfigFromJSON,
    SolidityServiceNodeForkConfigFromJSONTyped,
    SolidityServiceNodeForkConfigToJSON,
    SolidityServiceNodeForkConfigToJSONTyped,
} from './SolidityServiceNodeForkConfig.js';

/**
 * 
 * @export
 * @interface SolidityServiceGetForkInfoResponse
 */
export interface SolidityServiceGetForkInfoResponse {
    /**
     * 
     * @type {string}
     * @memberof SolidityServiceGetForkInfoResponse
     */
    currentBlockNumber?: string;
    /**
     * 
     * @type {string}
     * @memberof SolidityServiceGetForkInfoResponse
     */
    currentBlockTimestamp?: string;
    /**
     * 
     * @type {string}
     * @memberof SolidityServiceGetForkInfoResponse
     */
    currentBlockHash?: string;
    /**
     * 
     * @type {string}
     * @memberof SolidityServiceGetForkInfoResponse
     */
    hardFork?: string;
    /**
     * 
     * @type {string}
     * @memberof SolidityServiceGetForkInfoResponse
     */
    transactionOrder?: string;
    /**
     * 
     * @type {SolidityServiceNodeEnvironment}
     * @memberof SolidityServiceGetForkInfoResponse
     */
    environment?: SolidityServiceNodeEnvironment;
    /**
     * 
     * @type {SolidityServiceNodeForkConfig}
     * @memberof SolidityServiceGetForkInfoResponse
     */
    forkConfig?: SolidityServiceNodeForkConfig;
}

/**
 * Check if a given object implements the SolidityServiceGetForkInfoResponse interface.
 */
export function instanceOfSolidityServiceGetForkInfoResponse(value: object): value is SolidityServiceGetForkInfoResponse {
    return true;
}

export function SolidityServiceGetForkInfoResponseFromJSON(json: any): SolidityServiceGetForkInfoResponse {
    return SolidityServiceGetForkInfoResponseFromJSONTyped(json, false);
}

export function SolidityServiceGetForkInfoResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SolidityServiceGetForkInfoResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'currentBlockNumber': json['currentBlockNumber'] == null ? undefined : json['currentBlockNumber'],
        'currentBlockTimestamp': json['currentBlockTimestamp'] == null ? undefined : json['currentBlockTimestamp'],
        'currentBlockHash': json['currentBlockHash'] == null ? undefined : json['currentBlockHash'],
        'hardFork': json['hardFork'] == null ? undefined : json['hardFork'],
        'transactionOrder': json['transactionOrder'] == null ? undefined : json['transactionOrder'],
        'environment': json['environment'] == null ? undefined : SolidityServiceNodeEnvironmentFromJSON(json['environment']),
        'forkConfig': json['forkConfig'] == null ? undefined : SolidityServiceNodeForkConfigFromJSON(json['forkConfig']),
    };
}

  export function SolidityServiceGetForkInfoResponseToJSON(json: any): SolidityServiceGetForkInfoResponse {
      return SolidityServiceGetForkInfoResponseToJSONTyped(json, false);
  }

  export function SolidityServiceGetForkInfoResponseToJSONTyped(value?: SolidityServiceGetForkInfoResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'currentBlockNumber': value['currentBlockNumber'],
        'currentBlockTimestamp': value['currentBlockTimestamp'],
        'currentBlockHash': value['currentBlockHash'],
        'hardFork': value['hardFork'],
        'transactionOrder': value['transactionOrder'],
        'environment': SolidityServiceNodeEnvironmentToJSON(value['environment']),
        'forkConfig': SolidityServiceNodeForkConfigToJSON(value['forkConfig']),
    };
}

