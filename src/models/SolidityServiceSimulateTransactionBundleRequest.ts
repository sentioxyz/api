/* tslint:disable */
/* eslint-disable */
/**
 * Sentio API
 * Sentio Open API for query data
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { SolidityServiceSimulation } from './SolidityServiceSimulation.js';
import {
    SolidityServiceSimulationFromJSON,
    SolidityServiceSimulationFromJSONTyped,
    SolidityServiceSimulationToJSON,
} from './SolidityServiceSimulation.js';

/**
 * 
 * @export
 * @interface SolidityServiceSimulateTransactionBundleRequest
 */
export interface SolidityServiceSimulateTransactionBundleRequest {
    /**
     * 
     * @type {string}
     * @memberof SolidityServiceSimulateTransactionBundleRequest
     */
    projectOwner: string;
    /**
     * 
     * @type {string}
     * @memberof SolidityServiceSimulateTransactionBundleRequest
     */
    projectSlug: string;
    /**
     * For blockNumber, transactionIndex, networkId, stateOverrides and blockOverrides fields, only the first simulation takes effect.
     * @type {Array<SolidityServiceSimulation>}
     * @memberof SolidityServiceSimulateTransactionBundleRequest
     */
    simulations: Array<SolidityServiceSimulation>;
}

/**
 * Check if a given object implements the SolidityServiceSimulateTransactionBundleRequest interface.
 */
export function instanceOfSolidityServiceSimulateTransactionBundleRequest(value: object): boolean {
    if (!('projectOwner' in value)) return false;
    if (!('projectSlug' in value)) return false;
    if (!('simulations' in value)) return false;
    return true;
}

export function SolidityServiceSimulateTransactionBundleRequestFromJSON(json: any): SolidityServiceSimulateTransactionBundleRequest {
    return SolidityServiceSimulateTransactionBundleRequestFromJSONTyped(json, false);
}

export function SolidityServiceSimulateTransactionBundleRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SolidityServiceSimulateTransactionBundleRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'projectOwner': json['projectOwner'],
        'projectSlug': json['projectSlug'],
        'simulations': ((json['simulations'] as Array<any>).map(SolidityServiceSimulationFromJSON)),
    };
}

export function SolidityServiceSimulateTransactionBundleRequestToJSON(value?: SolidityServiceSimulateTransactionBundleRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'projectOwner': value['projectOwner'],
        'projectSlug': value['projectSlug'],
        'simulations': ((value['simulations'] as Array<any>).map(SolidityServiceSimulationToJSON)),
    };
}

