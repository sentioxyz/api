/* tslint:disable */
/* eslint-disable */
/**
 * Sentio API
 * Sentio Open API for query data
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MetricsServiceMetricsQueryResponseMetric
 */
export interface MetricsServiceMetricsQueryResponseMetric {
    /**
     * 
     * @type {string}
     * @memberof MetricsServiceMetricsQueryResponseMetric
     */
    name?: string;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof MetricsServiceMetricsQueryResponseMetric
     */
    labels?: { [key: string]: string; };
    /**
     * 
     * @type {string}
     * @memberof MetricsServiceMetricsQueryResponseMetric
     */
    displayName?: string;
}

/**
 * Check if a given object implements the MetricsServiceMetricsQueryResponseMetric interface.
 */
export function instanceOfMetricsServiceMetricsQueryResponseMetric(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MetricsServiceMetricsQueryResponseMetricFromJSON(json: any): MetricsServiceMetricsQueryResponseMetric {
    return MetricsServiceMetricsQueryResponseMetricFromJSONTyped(json, false);
}

export function MetricsServiceMetricsQueryResponseMetricFromJSONTyped(json: any, ignoreDiscriminator: boolean): MetricsServiceMetricsQueryResponseMetric {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'labels': !exists(json, 'labels') ? undefined : json['labels'],
        'displayName': !exists(json, 'displayName') ? undefined : json['displayName'],
    };
}

export function MetricsServiceMetricsQueryResponseMetricToJSON(value?: MetricsServiceMetricsQueryResponseMetric | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'labels': value.labels,
        'displayName': value.displayName,
    };
}

