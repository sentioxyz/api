/* tslint:disable */
/* eslint-disable */
/**
 * Sentio API
 * Sentio Open API for query data
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { CommonColumnState } from './CommonColumnState.js';
import {
    CommonColumnStateFromJSON,
    CommonColumnStateFromJSONTyped,
    CommonColumnStateToJSON,
} from './CommonColumnState.js';
import type { CommonEventLogColumn } from './CommonEventLogColumn.js';
import {
    CommonEventLogColumnFromJSON,
    CommonEventLogColumnFromJSONTyped,
    CommonEventLogColumnToJSON,
} from './CommonEventLogColumn.js';

/**
 * 
 * @export
 * @interface CommonEventLogConfig
 */
export interface CommonEventLogConfig {
    /**
     * 
     * @type {Array<CommonEventLogColumn>}
     * @memberof CommonEventLogConfig
     */
    columns?: Array<CommonEventLogColumn>;
    /**
     * 
     * @type {CommonColumnState}
     * @memberof CommonEventLogConfig
     */
    state?: CommonColumnState;
}

/**
 * Check if a given object implements the CommonEventLogConfig interface.
 */
export function instanceOfCommonEventLogConfig(value: object): boolean {
    return true;
}

export function CommonEventLogConfigFromJSON(json: any): CommonEventLogConfig {
    return CommonEventLogConfigFromJSONTyped(json, false);
}

export function CommonEventLogConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommonEventLogConfig {
    if (json == null) {
        return json;
    }
    return {
        
        'columns': json['columns'] == null ? undefined : ((json['columns'] as Array<any>).map(CommonEventLogColumnFromJSON)),
        'state': json['state'] == null ? undefined : CommonColumnStateFromJSON(json['state']),
    };
}

export function CommonEventLogConfigToJSON(value?: CommonEventLogConfig | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'columns': value['columns'] == null ? undefined : ((value['columns'] as Array<any>).map(CommonEventLogColumnToJSON)),
        'state': CommonColumnStateToJSON(value['state']),
    };
}

