/* tslint:disable */
/* eslint-disable */
/**
 * Sentio API
 * Sentio Open API for query data
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { SolidityServiceCompilerOptions } from './SolidityServiceCompilerOptions.js';
import {
    SolidityServiceCompilerOptionsFromJSON,
    SolidityServiceCompilerOptionsFromJSONTyped,
    SolidityServiceCompilerOptionsToJSON,
} from './SolidityServiceCompilerOptions.js';

/**
 * 
 * @export
 * @interface SolidityServiceSourceInfo
 */
export interface SolidityServiceSourceInfo {
    /**
     * 
     * @type {string}
     * @memberof SolidityServiceSourceInfo
     */
    contractName?: string;
    /**
     * 
     * @type {SolidityServiceCompilerOptions}
     * @memberof SolidityServiceSourceInfo
     */
    options?: SolidityServiceCompilerOptions;
}

/**
 * Check if a given object implements the SolidityServiceSourceInfo interface.
 */
export function instanceOfSolidityServiceSourceInfo(value: object): boolean {
    return true;
}

export function SolidityServiceSourceInfoFromJSON(json: any): SolidityServiceSourceInfo {
    return SolidityServiceSourceInfoFromJSONTyped(json, false);
}

export function SolidityServiceSourceInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): SolidityServiceSourceInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'contractName': json['contractName'] == null ? undefined : json['contractName'],
        'options': json['options'] == null ? undefined : SolidityServiceCompilerOptionsFromJSON(json['options']),
    };
}

export function SolidityServiceSourceInfoToJSON(value?: SolidityServiceSourceInfo | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'contractName': value['contractName'],
        'options': SolidityServiceCompilerOptionsToJSON(value['options']),
    };
}

