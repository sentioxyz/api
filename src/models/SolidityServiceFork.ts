/* tslint:disable */
/* eslint-disable */
/**
 * Sentio API
 * Sentio Open API for query data
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { SolidityServiceExternalFork } from './SolidityServiceExternalFork.js';
import {
    SolidityServiceExternalForkFromJSON,
    SolidityServiceExternalForkFromJSONTyped,
    SolidityServiceExternalForkToJSON,
    SolidityServiceExternalForkToJSONTyped,
} from './SolidityServiceExternalFork.js';
import type { SolidityServiceForkType } from './SolidityServiceForkType.js';
import {
    SolidityServiceForkTypeFromJSON,
    SolidityServiceForkTypeFromJSONTyped,
    SolidityServiceForkTypeToJSON,
    SolidityServiceForkTypeToJSONTyped,
} from './SolidityServiceForkType.js';
import type { SolidityServiceManagedFork } from './SolidityServiceManagedFork.js';
import {
    SolidityServiceManagedForkFromJSON,
    SolidityServiceManagedForkFromJSONTyped,
    SolidityServiceManagedForkToJSON,
    SolidityServiceManagedForkToJSONTyped,
} from './SolidityServiceManagedFork.js';

/**
 * 
 * @export
 * @interface SolidityServiceFork
 */
export interface SolidityServiceFork {
    /**
     * 
     * @type {string}
     * @memberof SolidityServiceFork
     */
    id?: string;
    /**
     * 
     * @type {SolidityServiceForkType}
     * @memberof SolidityServiceFork
     */
    type?: SolidityServiceForkType;
    /**
     * 
     * @type {string}
     * @memberof SolidityServiceFork
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof SolidityServiceFork
     */
    extra?: string;
    /**
     * 
     * @type {SolidityServiceManagedFork}
     * @memberof SolidityServiceFork
     */
    managedFork?: SolidityServiceManagedFork;
    /**
     * 
     * @type {SolidityServiceExternalFork}
     * @memberof SolidityServiceFork
     */
    externalFork?: SolidityServiceExternalFork;
    /**
     * 
     * @type {Date}
     * @memberof SolidityServiceFork
     */
    createTime?: Date;
    /**
     * 
     * @type {Date}
     * @memberof SolidityServiceFork
     */
    updateTime?: Date;
}



/**
 * Check if a given object implements the SolidityServiceFork interface.
 */
export function instanceOfSolidityServiceFork(value: object): value is SolidityServiceFork {
    return true;
}

export function SolidityServiceForkFromJSON(json: any): SolidityServiceFork {
    return SolidityServiceForkFromJSONTyped(json, false);
}

export function SolidityServiceForkFromJSONTyped(json: any, ignoreDiscriminator: boolean): SolidityServiceFork {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'type': json['type'] == null ? undefined : SolidityServiceForkTypeFromJSON(json['type']),
        'name': json['name'] == null ? undefined : json['name'],
        'extra': json['extra'] == null ? undefined : json['extra'],
        'managedFork': json['managedFork'] == null ? undefined : SolidityServiceManagedForkFromJSON(json['managedFork']),
        'externalFork': json['externalFork'] == null ? undefined : SolidityServiceExternalForkFromJSON(json['externalFork']),
        'createTime': json['createTime'] == null ? undefined : (new Date(json['createTime'])),
        'updateTime': json['updateTime'] == null ? undefined : (new Date(json['updateTime'])),
    };
}

  export function SolidityServiceForkToJSON(json: any): SolidityServiceFork {
      return SolidityServiceForkToJSONTyped(json, false);
  }

  export function SolidityServiceForkToJSONTyped(value?: SolidityServiceFork | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'type': SolidityServiceForkTypeToJSON(value['type']),
        'name': value['name'],
        'extra': value['extra'],
        'managedFork': SolidityServiceManagedForkToJSON(value['managedFork']),
        'externalFork': SolidityServiceExternalForkToJSON(value['externalFork']),
        'createTime': value['createTime'] == null ? undefined : ((value['createTime']).toISOString()),
        'updateTime': value['updateTime'] == null ? undefined : ((value['updateTime']).toISOString()),
    };
}

