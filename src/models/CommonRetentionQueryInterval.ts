/* tslint:disable */
/* eslint-disable */
/**
 * Sentio API
 * Sentio Open API for query data
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { CommonRetentionQueryIntervalUnit } from './CommonRetentionQueryIntervalUnit.js';
import {
    CommonRetentionQueryIntervalUnitFromJSON,
    CommonRetentionQueryIntervalUnitFromJSONTyped,
    CommonRetentionQueryIntervalUnitToJSON,
} from './CommonRetentionQueryIntervalUnit.js';

/**
 * 
 * @export
 * @interface CommonRetentionQueryInterval
 */
export interface CommonRetentionQueryInterval {
    /**
     * 
     * @type {number}
     * @memberof CommonRetentionQueryInterval
     */
    value?: number;
    /**
     * 
     * @type {CommonRetentionQueryIntervalUnit}
     * @memberof CommonRetentionQueryInterval
     */
    unit?: CommonRetentionQueryIntervalUnit;
}

/**
 * Check if a given object implements the CommonRetentionQueryInterval interface.
 */
export function instanceOfCommonRetentionQueryInterval(value: object): boolean {
    return true;
}

export function CommonRetentionQueryIntervalFromJSON(json: any): CommonRetentionQueryInterval {
    return CommonRetentionQueryIntervalFromJSONTyped(json, false);
}

export function CommonRetentionQueryIntervalFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommonRetentionQueryInterval {
    if (json == null) {
        return json;
    }
    return {
        
        'value': json['value'] == null ? undefined : json['value'],
        'unit': json['unit'] == null ? undefined : CommonRetentionQueryIntervalUnitFromJSON(json['unit']),
    };
}

export function CommonRetentionQueryIntervalToJSON(value?: CommonRetentionQueryInterval | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'value': value['value'],
        'unit': CommonRetentionQueryIntervalUnitToJSON(value['unit']),
    };
}

