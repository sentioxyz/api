/* tslint:disable */
/* eslint-disable */
/**
 * Sentio API
 * Sentio Open API for query data
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CommonJoinOperator } from './CommonJoinOperator';
import {
    CommonJoinOperatorFromJSON,
    CommonJoinOperatorFromJSONTyped,
    CommonJoinOperatorToJSON,
} from './CommonJoinOperator';
import type { CommonSegmentationQuery } from './CommonSegmentationQuery';
import {
    CommonSegmentationQueryFromJSON,
    CommonSegmentationQueryFromJSONTyped,
    CommonSegmentationQueryToJSON,
} from './CommonSegmentationQuery';
import type { CommonTimeRangeLite } from './CommonTimeRangeLite';
import {
    CommonTimeRangeLiteFromJSON,
    CommonTimeRangeLiteFromJSONTyped,
    CommonTimeRangeLiteToJSON,
} from './CommonTimeRangeLite';

/**
 * 
 * @export
 * @interface AnalyticServiceCohortsRequest
 */
export interface AnalyticServiceCohortsRequest {
    /**
     * 
     * @type {string}
     * @memberof AnalyticServiceCohortsRequest
     */
    projectOwner?: string;
    /**
     * 
     * @type {string}
     * @memberof AnalyticServiceCohortsRequest
     */
    projectSlug?: string;
    /**
     * 
     * @type {string}
     * @memberof AnalyticServiceCohortsRequest
     */
    projectId?: string;
    /**
     * 
     * @type {number}
     * @memberof AnalyticServiceCohortsRequest
     */
    version?: number;
    /**
     * 
     * @type {CommonTimeRangeLite}
     * @memberof AnalyticServiceCohortsRequest
     */
    timeRange?: CommonTimeRangeLite;
    /**
     * 
     * @type {Array<CommonSegmentationQuery>}
     * @memberof AnalyticServiceCohortsRequest
     */
    queries?: Array<CommonSegmentationQuery>;
    /**
     * 
     * @type {CommonJoinOperator}
     * @memberof AnalyticServiceCohortsRequest
     */
    joinOperator?: CommonJoinOperator;
    /**
     * 
     * @type {boolean}
     * @memberof AnalyticServiceCohortsRequest
     */
    requireValue?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AnalyticServiceCohortsRequest
     */
    debug?: boolean;
}

/**
 * Check if a given object implements the AnalyticServiceCohortsRequest interface.
 */
export function instanceOfAnalyticServiceCohortsRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AnalyticServiceCohortsRequestFromJSON(json: any): AnalyticServiceCohortsRequest {
    return AnalyticServiceCohortsRequestFromJSONTyped(json, false);
}

export function AnalyticServiceCohortsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): AnalyticServiceCohortsRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'projectOwner': !exists(json, 'projectOwner') ? undefined : json['projectOwner'],
        'projectSlug': !exists(json, 'projectSlug') ? undefined : json['projectSlug'],
        'projectId': !exists(json, 'projectId') ? undefined : json['projectId'],
        'version': !exists(json, 'version') ? undefined : json['version'],
        'timeRange': !exists(json, 'timeRange') ? undefined : CommonTimeRangeLiteFromJSON(json['timeRange']),
        'queries': !exists(json, 'queries') ? undefined : ((json['queries'] as Array<any>).map(CommonSegmentationQueryFromJSON)),
        'joinOperator': !exists(json, 'joinOperator') ? undefined : CommonJoinOperatorFromJSON(json['joinOperator']),
        'requireValue': !exists(json, 'requireValue') ? undefined : json['requireValue'],
        'debug': !exists(json, 'debug') ? undefined : json['debug'],
    };
}

export function AnalyticServiceCohortsRequestToJSON(value?: AnalyticServiceCohortsRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'projectOwner': value.projectOwner,
        'projectSlug': value.projectSlug,
        'projectId': value.projectId,
        'version': value.version,
        'timeRange': CommonTimeRangeLiteToJSON(value.timeRange),
        'queries': value.queries === undefined ? undefined : ((value.queries as Array<any>).map(CommonSegmentationQueryToJSON)),
        'joinOperator': CommonJoinOperatorToJSON(value.joinOperator),
        'requireValue': value.requireValue,
        'debug': value.debug,
    };
}

