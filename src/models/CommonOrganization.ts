/* tslint:disable */
/* eslint-disable */
/**
 * Sentio API
 * Sentio Open API for query data
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CommonOrganizationMember } from './CommonOrganizationMember';
import {
    CommonOrganizationMemberFromJSON,
    CommonOrganizationMemberFromJSONTyped,
    CommonOrganizationMemberToJSON,
} from './CommonOrganizationMember';
import type { CommonProjectInfo } from './CommonProjectInfo';
import {
    CommonProjectInfoFromJSON,
    CommonProjectInfoFromJSONTyped,
    CommonProjectInfoToJSON,
} from './CommonProjectInfo';
import type { CommonTier } from './CommonTier';
import {
    CommonTierFromJSON,
    CommonTierFromJSONTyped,
    CommonTierToJSON,
} from './CommonTier';

/**
 * 
 * @export
 * @interface CommonOrganization
 */
export interface CommonOrganization {
    /**
     * 
     * @type {string}
     * @memberof CommonOrganization
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof CommonOrganization
     */
    oid?: string;
    /**
     * 
     * @type {string}
     * @memberof CommonOrganization
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof CommonOrganization
     */
    createdAt?: string;
    /**
     * 
     * @type {string}
     * @memberof CommonOrganization
     */
    updatedAt?: string;
    /**
     * 
     * @type {Array<CommonOrganizationMember>}
     * @memberof CommonOrganization
     */
    members?: Array<CommonOrganizationMember>;
    /**
     * 
     * @type {string}
     * @memberof CommonOrganization
     */
    displayName?: string;
    /**
     * 
     * @type {string}
     * @memberof CommonOrganization
     */
    logoUrl?: string;
    /**
     * 
     * @type {Array<CommonProjectInfo>}
     * @memberof CommonOrganization
     */
    projects?: Array<CommonProjectInfo>;
    /**
     * 
     * @type {CommonTier}
     * @memberof CommonOrganization
     */
    tier?: CommonTier;
}

/**
 * Check if a given object implements the CommonOrganization interface.
 */
export function instanceOfCommonOrganization(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CommonOrganizationFromJSON(json: any): CommonOrganization {
    return CommonOrganizationFromJSONTyped(json, false);
}

export function CommonOrganizationFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommonOrganization {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'oid': !exists(json, 'oid') ? undefined : json['oid'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'createdAt': !exists(json, 'createdAt') ? undefined : json['createdAt'],
        'updatedAt': !exists(json, 'updatedAt') ? undefined : json['updatedAt'],
        'members': !exists(json, 'members') ? undefined : ((json['members'] as Array<any>).map(CommonOrganizationMemberFromJSON)),
        'displayName': !exists(json, 'displayName') ? undefined : json['displayName'],
        'logoUrl': !exists(json, 'logoUrl') ? undefined : json['logoUrl'],
        'projects': !exists(json, 'projects') ? undefined : ((json['projects'] as Array<any>).map(CommonProjectInfoFromJSON)),
        'tier': !exists(json, 'tier') ? undefined : CommonTierFromJSON(json['tier']),
    };
}

export function CommonOrganizationToJSON(value?: CommonOrganization | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'oid': value.oid,
        'name': value.name,
        'createdAt': value.createdAt,
        'updatedAt': value.updatedAt,
        'members': value.members === undefined ? undefined : ((value.members as Array<any>).map(CommonOrganizationMemberToJSON)),
        'displayName': value.displayName,
        'logoUrl': value.logoUrl,
        'projects': value.projects === undefined ? undefined : ((value.projects as Array<any>).map(CommonProjectInfoToJSON)),
        'tier': CommonTierToJSON(value.tier),
    };
}

