/* tslint:disable */
/* eslint-disable */
/**
 * Sentio API
 * Sentio Open API for query data
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { CommonOrganizationMember } from './CommonOrganizationMember.js';
import {
    CommonOrganizationMemberFromJSON,
    CommonOrganizationMemberFromJSONTyped,
    CommonOrganizationMemberToJSON,
} from './CommonOrganizationMember.js';
import type { CommonProjectInfo } from './CommonProjectInfo.js';
import {
    CommonProjectInfoFromJSON,
    CommonProjectInfoFromJSONTyped,
    CommonProjectInfoToJSON,
} from './CommonProjectInfo.js';
import type { CommonTier } from './CommonTier.js';
import {
    CommonTierFromJSON,
    CommonTierFromJSONTyped,
    CommonTierToJSON,
} from './CommonTier.js';

/**
 * 
 * @export
 * @interface CommonOrganization
 */
export interface CommonOrganization {
    /**
     * 
     * @type {string}
     * @memberof CommonOrganization
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof CommonOrganization
     */
    oid?: string;
    /**
     * 
     * @type {string}
     * @memberof CommonOrganization
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof CommonOrganization
     */
    createdAt?: string;
    /**
     * 
     * @type {string}
     * @memberof CommonOrganization
     */
    updatedAt?: string;
    /**
     * 
     * @type {Array<CommonOrganizationMember>}
     * @memberof CommonOrganization
     */
    members?: Array<CommonOrganizationMember>;
    /**
     * 
     * @type {string}
     * @memberof CommonOrganization
     */
    displayName?: string;
    /**
     * 
     * @type {string}
     * @memberof CommonOrganization
     */
    logoUrl?: string;
    /**
     * 
     * @type {Array<CommonProjectInfo>}
     * @memberof CommonOrganization
     */
    projects?: Array<CommonProjectInfo>;
    /**
     * 
     * @type {CommonTier}
     * @memberof CommonOrganization
     */
    tier?: CommonTier;
}

/**
 * Check if a given object implements the CommonOrganization interface.
 */
export function instanceOfCommonOrganization(value: object): boolean {
    return true;
}

export function CommonOrganizationFromJSON(json: any): CommonOrganization {
    return CommonOrganizationFromJSONTyped(json, false);
}

export function CommonOrganizationFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommonOrganization {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'oid': json['oid'] == null ? undefined : json['oid'],
        'name': json['name'] == null ? undefined : json['name'],
        'createdAt': json['createdAt'] == null ? undefined : json['createdAt'],
        'updatedAt': json['updatedAt'] == null ? undefined : json['updatedAt'],
        'members': json['members'] == null ? undefined : ((json['members'] as Array<any>).map(CommonOrganizationMemberFromJSON)),
        'displayName': json['displayName'] == null ? undefined : json['displayName'],
        'logoUrl': json['logoUrl'] == null ? undefined : json['logoUrl'],
        'projects': json['projects'] == null ? undefined : ((json['projects'] as Array<any>).map(CommonProjectInfoFromJSON)),
        'tier': json['tier'] == null ? undefined : CommonTierFromJSON(json['tier']),
    };
}

export function CommonOrganizationToJSON(value?: CommonOrganization | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'oid': value['oid'],
        'name': value['name'],
        'createdAt': value['createdAt'],
        'updatedAt': value['updatedAt'],
        'members': value['members'] == null ? undefined : ((value['members'] as Array<any>).map(CommonOrganizationMemberToJSON)),
        'displayName': value['displayName'],
        'logoUrl': value['logoUrl'],
        'projects': value['projects'] == null ? undefined : ((value['projects'] as Array<any>).map(CommonProjectInfoToJSON)),
        'tier': CommonTierToJSON(value['tier']),
    };
}

