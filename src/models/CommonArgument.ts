/* tslint:disable */
/* eslint-disable */
/**
 * Sentio API
 * Sentio Open API for query data
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CommonDuration } from './CommonDuration';
import {
    CommonDurationFromJSON,
    CommonDurationFromJSONTyped,
    CommonDurationToJSON,
} from './CommonDuration';

/**
 * 
 * @export
 * @interface CommonArgument
 */
export interface CommonArgument {
    /**
     * 
     * @type {string}
     * @memberof CommonArgument
     */
    stringValue?: string;
    /**
     * 
     * @type {number}
     * @memberof CommonArgument
     */
    intValue?: number;
    /**
     * 
     * @type {number}
     * @memberof CommonArgument
     */
    doubleValue?: number;
    /**
     * 
     * @type {boolean}
     * @memberof CommonArgument
     */
    boolValue?: boolean;
    /**
     * 
     * @type {CommonDuration}
     * @memberof CommonArgument
     */
    durationValue?: CommonDuration;
}

/**
 * Check if a given object implements the CommonArgument interface.
 */
export function instanceOfCommonArgument(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CommonArgumentFromJSON(json: any): CommonArgument {
    return CommonArgumentFromJSONTyped(json, false);
}

export function CommonArgumentFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommonArgument {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'stringValue': !exists(json, 'stringValue') ? undefined : json['stringValue'],
        'intValue': !exists(json, 'intValue') ? undefined : json['intValue'],
        'doubleValue': !exists(json, 'doubleValue') ? undefined : json['doubleValue'],
        'boolValue': !exists(json, 'boolValue') ? undefined : json['boolValue'],
        'durationValue': !exists(json, 'durationValue') ? undefined : CommonDurationFromJSON(json['durationValue']),
    };
}

export function CommonArgumentToJSON(value?: CommonArgument | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'stringValue': value.stringValue,
        'intValue': value.intValue,
        'doubleValue': value.doubleValue,
        'boolValue': value.boolValue,
        'durationValue': CommonDurationToJSON(value.durationValue),
    };
}

