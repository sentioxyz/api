/* tslint:disable */
/* eslint-disable */
/**
 * Sentio API
 * Sentio Open API for query data
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CommonProject } from './CommonProject';
import {
    CommonProjectFromJSON,
    CommonProjectFromJSONTyped,
    CommonProjectToJSON,
} from './CommonProject';
import type { ProcessorServiceProcessor } from './ProcessorServiceProcessor';
import {
    ProcessorServiceProcessorFromJSON,
    ProcessorServiceProcessorFromJSONTyped,
    ProcessorServiceProcessorToJSON,
} from './ProcessorServiceProcessor';

/**
 * 
 * @export
 * @interface ProcessorServiceGetProcessorWithProjectResponse
 */
export interface ProcessorServiceGetProcessorWithProjectResponse {
    /**
     * 
     * @type {ProcessorServiceProcessor}
     * @memberof ProcessorServiceGetProcessorWithProjectResponse
     */
    processor?: ProcessorServiceProcessor;
    /**
     * 
     * @type {CommonProject}
     * @memberof ProcessorServiceGetProcessorWithProjectResponse
     */
    project?: CommonProject;
}

/**
 * Check if a given object implements the ProcessorServiceGetProcessorWithProjectResponse interface.
 */
export function instanceOfProcessorServiceGetProcessorWithProjectResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ProcessorServiceGetProcessorWithProjectResponseFromJSON(json: any): ProcessorServiceGetProcessorWithProjectResponse {
    return ProcessorServiceGetProcessorWithProjectResponseFromJSONTyped(json, false);
}

export function ProcessorServiceGetProcessorWithProjectResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProcessorServiceGetProcessorWithProjectResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'processor': !exists(json, 'processor') ? undefined : ProcessorServiceProcessorFromJSON(json['processor']),
        'project': !exists(json, 'project') ? undefined : CommonProjectFromJSON(json['project']),
    };
}

export function ProcessorServiceGetProcessorWithProjectResponseToJSON(value?: ProcessorServiceGetProcessorWithProjectResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'processor': ProcessorServiceProcessorToJSON(value.processor),
        'project': CommonProjectToJSON(value.project),
    };
}

