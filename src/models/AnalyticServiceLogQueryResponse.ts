/* tslint:disable */
/* eslint-disable */
/**
 * Sentio API
 * Sentio Open API for query data
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { CommonAny } from './CommonAny.js';
import {
    CommonAnyFromJSON,
    CommonAnyFromJSONTyped,
    CommonAnyToJSON,
} from './CommonAny.js';
import type { CommonEventLogEntry } from './CommonEventLogEntry.js';
import {
    CommonEventLogEntryFromJSON,
    CommonEventLogEntryFromJSONTyped,
    CommonEventLogEntryToJSON,
} from './CommonEventLogEntry.js';

/**
 * 
 * @export
 * @interface AnalyticServiceLogQueryResponse
 */
export interface AnalyticServiceLogQueryResponse {
    /**
     * 
     * @type {Array<CommonEventLogEntry>}
     * @memberof AnalyticServiceLogQueryResponse
     */
    entries?: Array<CommonEventLogEntry>;
    /**
     * 
     * @type {Array<CommonAny>}
     * @memberof AnalyticServiceLogQueryResponse
     */
    after?: Array<CommonAny>;
    /**
     * 
     * @type {string}
     * @memberof AnalyticServiceLogQueryResponse
     */
    total?: string;
}

/**
 * Check if a given object implements the AnalyticServiceLogQueryResponse interface.
 */
export function instanceOfAnalyticServiceLogQueryResponse(value: object): boolean {
    return true;
}

export function AnalyticServiceLogQueryResponseFromJSON(json: any): AnalyticServiceLogQueryResponse {
    return AnalyticServiceLogQueryResponseFromJSONTyped(json, false);
}

export function AnalyticServiceLogQueryResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AnalyticServiceLogQueryResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'entries': json['entries'] == null ? undefined : ((json['entries'] as Array<any>).map(CommonEventLogEntryFromJSON)),
        'after': json['after'] == null ? undefined : ((json['after'] as Array<any>).map(CommonAnyFromJSON)),
        'total': json['total'] == null ? undefined : json['total'],
    };
}

export function AnalyticServiceLogQueryResponseToJSON(value?: AnalyticServiceLogQueryResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'entries': value['entries'] == null ? undefined : ((value['entries'] as Array<any>).map(CommonEventLogEntryToJSON)),
        'after': value['after'] == null ? undefined : ((value['after'] as Array<any>).map(CommonAnyToJSON)),
        'total': value['total'],
    };
}

