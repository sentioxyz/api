/* tslint:disable */
/* eslint-disable */
/**
 * Sentio API
 * Sentio Open API for query data
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface WebServiceChartConfigColorTheme
 */
export interface WebServiceChartConfigColorTheme {
    /**
     * 
     * @type {string}
     * @memberof WebServiceChartConfigColorTheme
     */
    textColor?: string;
    /**
     * 
     * @type {string}
     * @memberof WebServiceChartConfigColorTheme
     */
    backgroundColor?: string;
    /**
     * 
     * @type {string}
     * @memberof WebServiceChartConfigColorTheme
     */
    themeType?: string;
}

/**
 * Check if a given object implements the WebServiceChartConfigColorTheme interface.
 */
export function instanceOfWebServiceChartConfigColorTheme(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function WebServiceChartConfigColorThemeFromJSON(json: any): WebServiceChartConfigColorTheme {
    return WebServiceChartConfigColorThemeFromJSONTyped(json, false);
}

export function WebServiceChartConfigColorThemeFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebServiceChartConfigColorTheme {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'textColor': !exists(json, 'textColor') ? undefined : json['textColor'],
        'backgroundColor': !exists(json, 'backgroundColor') ? undefined : json['backgroundColor'],
        'themeType': !exists(json, 'themeType') ? undefined : json['themeType'],
    };
}

export function WebServiceChartConfigColorThemeToJSON(value?: WebServiceChartConfigColorTheme | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'textColor': value.textColor,
        'backgroundColor': value.backgroundColor,
        'themeType': value.themeType,
    };
}

